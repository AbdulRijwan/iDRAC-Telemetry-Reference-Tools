version: '3.1'

services:
  prometheus:
    image: prom/prometheus:v2.1.0
    restart: always
    container_name: prometheus
    environment:
      - node.name=prometheus
      - PROMETHEUS_DB=poweredge_telemetry_metrics
    networks:
      - combinedpipeline

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    networks:
      - combinedpipeline

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - combinedpipeline

    healthcheck:
      test: curl http://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - combinedpipeline

  es03:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: es03
    environment:
      - node.name=es03
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - combinedpipeline

  kib01:
    image: docker.elastic.co/kibana/kibana:7.10.1
    container_name: kib01
    depends_on: {"es01": {"condition": "service_healthy"}}
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: http://es01:9200
    networks:
      - combinedpipeline

  influx:
    image: influxdb:1.8
    volumes:
      - influxdb-storage:/var/lib/influxdb
    container_name: influx
    environment:
      - node.name=influx
      - INFLUXDB_DB=poweredge_telemetry_metrics
    networks:
      - combinedpipeline
    healthcheck:
      test: curl http://localhost:8086 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

  activemq:
    image: rmohr/activemq:5.10.0 
    container_name: activemq
    networks:
      - combinedpipeline

  mysqldb:
    image: mysql:latest
    restart: always
    container_name: mysqldb
    environment:
      - MYSQL_DATABASE=telemetrysource_services_db #specify configured database name
      - MYSQL_USER=reftools           #sample reference - specify configured user name
      - MYSQL_PASSWORD=*Ref!**lsq8#v* #sample reference - specify configured credentials
      - MYSQL_ROOT_PASSWORD=""        #sample reference - specify configured credentials
    networks:
      - combinedpipeline
    #mount deployed mysql filesystem location for persistance

  telemetry-collector-all:
    image: jonhass/idrac-telemetry-collector:0.0.1
    container_name: telemetry-collector-all
    environment:
      - MESSAGEBUS_HOST=activemq      #sample reference - specify messagebus hostname
      - MESSAGEBUS_PORT=61613         #sample reference - specify messagebus port
      - CONFIGUI_HTTP_PORT=8082       #sample reference - specify web application port
      - MYSQL_DATABASE=telemetrysource_services_db #sample reference - specify configured database name
      - MYSQL_USER=reftools           #sample reference - specify configured user name
      - MYSQL_PASSWORD=*Ref!**lsq8#v* #sample reference - specify configured credentials
      - MYSQL_HOST=mysqldb            #sample reference - specify mysql hostname
      - MYSQL_HOST_PORT=3306          #sample reference - specify mysql port number
      - PROMETHEUSDB_SERVER=prometheus
      - INFLUXDB_SERVER=influx
      - INFLUXDB_DB=poweredge_telemetry_metrics
      - ELASTICSEARCH_URL=http://es01:9200
    networks:
      - combinedpipeline
    depends_on:
      - "activemq"
      - "mysqldb"

networks:
  combinedpipeline:
    driver: bridge

volumes:
  influxdb-storage:
  grafana-storage:
